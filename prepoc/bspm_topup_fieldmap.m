function matlabbatch = bspm_topup_fieldmap(fmap_mag, fmap_hz, epi, epi_etl, varargin)
% BSPM_TOPUP_FIELDMAP
%
%   USAGE: matlabbatch = bspm_topup_fieldmap(fmap_mag, fmap_hz, epi, varargin)
%
%   ARGUMENTS:
%       mag     = the magnitude image (if 2 entered, mean is taken)
%       fmap_hz = precalculated fieldmap in Hz
%       epi     = first EPI of each run
%       epi_etl = effective EPI echo train length in ms
%
%   VARARGIN: 
%       blip    = blip direction (-1 or 1) [DEFAULT = -1]
%       jacbob  = use jacobian modulation? (0 = NO, 1 = YES) [DEFAULT = 0]
%

% ------------------------------------------------------- Copyright (C) 2014 -------------------------------------------------------
%	Author: Bob Spunt
%	Affilitation: Caltech
%	Email: spunt@caltech.edu
%
%	$Revision Date: Aug_20_2014
%
% 2020-01-28 Mike Tyszka
% Update to handle fieldmaps generated by TOPUP from SE-EPI pair
%
% SPM segmentation doesn't handle T2w SE-EPI images well, so skip brain
% extraction. SE-EPI images have similar non-brain structure to BOLD-EPI so
% registration should still handle this (confirm).
%
% Use pre-calculated fieldmap in Hz, not phase images, to generate voxel
% displacement map.
%

def = { 'writeunwarped', 0, ...
        'blip',         -1, ...
        'jacob',        0};
    
vals = setargs(def, varargin);

if nargin < 4, mfile_showhelp; disp(vals); return; end
if ischar(fmap_hz), fmap_hz = cellstr(fmap_hz); end
if ischar(fmap_mag), fmap_mag = cellstr(fmap_mag); end
if ischar(epi), epi = cellstr(epi); end

flag = bspm_check_orientations({fmap_mag{1}; fmap_hz{1}});
if flag, bspm_reorient(fmap_hz, fmap_mag); end

% Build job variable
% Adapt to use pre-calculated Hz fieldmap from TOPUP
% Use fieldmap.calculatevdm instead of 
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.data.precalcfieldmap.precalcfieldmap = fmap_hz;
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.data.precalcfieldmap.magfieldmap = fmap_mag;

% Populate list of BOLD EPIs to unwarp
if length(epi) > 1
    for r = 1:length(epi)
        matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.session(r).epi = epi(r);
    end
else
    matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.session(1).epi = epi;
end

% Dummy MEGE echo times in ms (not needed with precalc Hz fieldmap)
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.defaults.defaultsval.et = [1.0, 2.0];

% Effective echo train length in ms (total EPI readout time)
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.defaults.defaultsval.tert = epi_etl;

% Do NOT attempt to mask brain in SE-EPI data using SPM tools
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.defaults.defaultsval.maskbrain = 0;

matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.defaults.defaultsval.blipdir = blip;
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.defaults.defaultsval.epifm = 0;

matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.matchvdm = 1;
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.sessname = 'run';
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.writeunwarped = writeunwarped;
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.anat = '';
matlabbatch{1}.spm.tools.fieldmap.calculatevdm.subj.matchanat = 0;

% run job
if nargout==0,  spm_jobman('initcfg'); spm_jobman('run',matlabbatch); end


end
